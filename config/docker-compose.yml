version: '3.9'

services:
  DataStorage:
    container_name: 'DataStorage'
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      HOST: ${DATA_STORAGE_HOST}
      POSTGRES_USER: ${DATA_STORAGE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DATA_STORAGE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATA_STORAGE_POSTGRES_DB}
      PORT: ${DATA_STORAGE_PORT}
      SSL_MODE: ${DATA_STORAGE_SSL_MODE}
      TZ: ${DATA_STORAGE_TZ}
      CONNECT_TIMEOUT: ${DATA_STORAGE_CONNECT_TIMEOUT}
    volumes:
      - './dbData/DataStorage/data/:/var/lib/postgres/data'
      - './dbData/DataStorage/init/:/docker-entrypoint-initdb.d/'
    networks:
      - tonoco

  CacheStorage:
    container_name: 'CacheStorage'
    image: 'redis:latest'
    ports:
      - "6379:6379"
    command: [ "sh", "-c", "redis-server --requirepass ${CACHE_STORAGE_PASSWORD} --appendonly yes" ]
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - './dbData/CacheStorage/data:/data'
    environment:
      REDIS_PASSWORD: ${CACHE_STORAGE_PASSWORD}
      REDIS_MAXMEMORY: ${CACHE_STORAGE_MAXMEMORY}
    networks:
      - tonoco

  MqBroker:
    container_name: 'MqBroker'
    image: 'rabbitmq:3.9.15-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./dbData/MqBroker/data/:/var/lib/rabbitmq/
    environment:
      MQ_URL: ${MQ_BROKER_URL}
      MQ_HOST: ${MQ_BROKER_HOST}
      MQ_PORT: ${MQ_BROKER_PORT}
      MQ_USERNAME: ${MQ_BROKER_USERNAME}
      MQ_PASSWORD: ${MQ_BROKER_PASSWORD}
    networks:
      - tonoco

networks:
  tonoco:
    name: 'tonoco'
    driver: bridge